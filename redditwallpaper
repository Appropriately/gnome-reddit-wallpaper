#!/usr/bin/python3.6


# Imports required for operation
import praw 
import os
from urllib import request
import argparse
import random
import time

# Retrieves username from OS
USERNAME = os.environ["USER"]
# Directory where images should be saved
SAVE_DIRECTORY = "/home/" + USERNAME + "/Pictures/Daily/"
# Location of default GNOME wallpapers
DEFAULT_DIRECTORY = "/home/" + USERNAME + "/Pictures/Wallpapers/"
# Setting that needs to be set to adjust wallpaper
SETTING = "set org.gnome.desktop.background picture-uri"
# Accepted file formats
ACCEPTED_FORMATS = ["png", "jpeg", "jpg"]

# Set up command line arguments
parser = argparse.ArgumentParser()
parser.add_argument("-t", "--time", default="day",
                    help="Interval for searching, default is 'day'.")
parser.add_argument("-s", "--sub", default="earthporn",
                    help="Subreddit to search.")
parser.add_argument("-r", "--overwrite", action="store_true", default=False,
                    help="Overwrite regardless.")
args = parser.parse_args()

# Given the url of the image to set and ends the program
def setWallpaper(url):
  os.system("gsettings " + SETTING + " file:" + url) # Sets new wallpaper
  print("Wallpaper set.")
  quit() # Terminate the program

# Chooses a random image from the GNOME wallpapers folder and sets it
def useDefault():
  print("Error: There was a problem getting an image, using a default.")
  filename = random.choice(os.listdir(DEFAULT_DIRECTORY)) # Random file
  new_wallpaper = os.path.join(DEFAULT_DIRECTORY, filename)
  setWallpaper(new_wallpaper) # Set this default as the new wallpaper

# Set up the instance of Reddit for accessing posts
reddit = praw.Reddit(client_id='qRiNZNc8eVDn_g',
                     client_secret='R4-IRlu8G53BZXeogWJdQkOws_4',
                     user_agent='linux:wallpaper:0.2 (/u/appropriately)')
print("Options - Time: " + args.time +" Subreddit: " + args.sub)

#try:
subreddit_accessed = reddit.subreddit(args.sub)
top_sub_day = next(subreddit_accessed.top(args.time)) # Get first submission
top_sub_filename = top_sub_day.url.split('/')[-1]
top_sub_ext = top_sub_filename.split('.')[-1]
print("Best image url selected: " + top_sub_day.url)

current_date = time.strftime("%d%m%Y") # Get time (used for identity)
filename = current_date + "." + top_sub_ext

if(top_sub_ext not in ACCEPTED_FORMATS):
  print("There was a problem with that format.")
  useDefault()

if args.overwrite:
  print("Overwriting old image")
  request.urlretrieve(top_sub_day.url, "/tmp/" + filename)
  os.system("cp /tmp/" + filename + " " + SAVE_DIRECTORY)
  setWallpaper(SAVE_DIRECTORY + filename)
else:
  if(os.path.isfile(SAVE_DIRECTORY+filename)):
    print("File for this day already exists!")
  else:
    request.urlretrieve(top_sub_day.url, SAVE_DIRECTORY + filename)
    print("Image downloaded as " + filename + "... setting now.")
#except:
 # useDefault() # If error, use a default wallpaper
